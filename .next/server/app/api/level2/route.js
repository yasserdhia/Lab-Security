"use strict";(()=>{var e={};e.id=707,e.ids=[707],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8678:e=>{e.exports=import("pg")},8036:(e,r,s)=>{s.a(e,async(e,t)=>{try{s.r(r),s.d(r,{originalPathname:()=>h,patchFetch:()=>c,requestAsyncStorage:()=>p,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>d});var a=s(9303),o=s(8716),n=s(670),i=s(3796),u=e([i]);i=(u.then?(await u)():u)[0];let l=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/level2/route",pathname:"/api/level2",filename:"route",bundlePath:"app/api/level2/route"},resolvedPagePath:"c:\\Users\\YASSER\\Documents\\GitHub\\Lab-Security\\src\\app\\api\\level2\\route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:p,staticGenerationAsyncStorage:d,serverHooks:m}=l,h="/api/level2/route";function c(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:d})}t()}catch(e){t(e)}})},3796:(e,r,s)=>{s.a(e,async(e,t)=>{try{s.r(r),s.d(r,{POST:()=>i});var a=s(7070),o=s(5748),n=e([o]);async function i(e){try{let r;let{username:s,password:t}=await e.json();if(!s||!t)return a.NextResponse.json({success:!1,error:"Username and password are required"},{status:400});r=isNaN(Number(s))?`SELECT id, username, email, first_name, last_name, role FROM users WHERE username = '${s}' AND password = '${t}'`:`SELECT id, username, email, first_name, last_name, role FROM users WHERE id = ${s} AND password = '${t}'`,console.log("Executing query:",r);try{await o.Z.query("SELECT 1"),console.log("Database connection test successful");let e=await o.Z.query(r);if(console.log("Query result:",e.rows),!(e.rows.length>0))return a.NextResponse.json({success:!1,message:"No results found. Try different numeric payloads.",data:{query:r,hint:"Try: 1 OR 1=1, or use UNION SELECT to extract data from other tables"}});{let s=e.rows;return a.NextResponse.json({success:!0,message:"Numeric injection successful! You have accessed user data.",data:{users:s,query:r,vulnerability:"Numeric SQL Injection",impact:"Data exposure, authentication bypass via numeric manipulation",tip:"Notice how you can access multiple users with UNION SELECT or OR conditions"}})}}catch(e){return console.error("Database error:",e),a.NextResponse.json({success:!1,error:"Database error occurred",message:e.message,data:{query:r,hint:"SQL error might reveal database structure. Try different numeric syntax."}},{status:500})}}catch(e){return console.error("Server error:",e),a.NextResponse.json({success:!1,error:"Server error occurred",message:e.message},{status:500})}}o=(n.then?(await n)():n)[0],t()}catch(e){t(e)}})},5748:(e,r,s)=>{s.a(e,async(e,t)=>{try{s.d(r,{Z:()=>i});var a=s(8678),o=e([a]);a=(o.then?(await o)():o)[0],console.log("Database URL:","postgresql://postgres:password@localhost:5432/sqli_lab");let n=new a.Pool({host:"db",port:5432,database:"sqli_lab",user:"postgres",password:"password",ssl:!1,max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3});n.on("connect",()=>{console.log("Connected to PostgreSQL database")}),n.on("error",e=>{console.error("Unexpected error on idle client",e)});let i=n;t()}catch(e){t(e)}})}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[276,972],()=>s(8036));module.exports=t})();