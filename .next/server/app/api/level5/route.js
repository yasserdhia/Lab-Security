"use strict";(()=>{var e={};e.id=22,e.ids=[22],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8678:e=>{e.exports=import("pg")},6566:(e,r,s)=>{s.a(e,async(e,t)=>{try{s.r(r),s.d(r,{originalPathname:()=>m,patchFetch:()=>c,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>g,staticGenerationAsyncStorage:()=>d});var o=s(9303),a=s(8716),n=s(670),i=s(4689),l=e([i]);i=(l.then?(await l)():l)[0];let u=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/level5/route",pathname:"/api/level5",filename:"route",bundlePath:"app/api/level5/route"},resolvedPagePath:"c:\\Users\\YASSER\\Documents\\GitHub\\Lab-Security\\src\\app\\api\\level5\\route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:p,staticGenerationAsyncStorage:d,serverHooks:g}=u,m="/api/level5/route";function c(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:d})}t()}catch(e){t(e)}})},4689:(e,r,s)=>{s.a(e,async(e,t)=>{try{s.r(r),s.d(r,{POST:()=>i});var o=s(7070),a=s(5748),n=e([a]);async function i(e){try{let{username:r,password:s}=await e.json();if(!r||!s)return o.NextResponse.json({success:!1,error:"Username and password are required"},{status:400});let t=`SELECT COUNT(*) FROM users WHERE username = '${r}' AND password = '${s}'`;console.log("Executing query:",t);let n=Date.now();try{await a.Z.query("SELECT 1"),console.log("Database connection test successful");let e=await a.Z.query(t);console.log("Query result:",e.rows);let r=parseInt(e.rows[0].count),s=Date.now()-n;return o.NextResponse.json({success:r>0,message:r>0?"Login successful":"Login failed",execution_time:s,debug_info:{query:t,vulnerability:"Time-based Blind SQL Injection",technique:"Use pg_sleep() to cause deliberate delays",example_payload:"'; SELECT CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END --",timing_analysis:"Compare response times to infer data"}})}catch(r){console.error("Database error:",r);let e=Date.now()-n;return o.NextResponse.json({success:!1,message:"Database error occurred",execution_time:e,debug_info:{query:t,error_hint:"SQL errors can also be timed for information extraction"}},{status:500})}}catch(e){return console.error("Server error:",e),o.NextResponse.json({success:!1,error:"Server error occurred",message:e.message},{status:500})}}a=(n.then?(await n)():n)[0],t()}catch(e){t(e)}})},5748:(e,r,s)=>{s.a(e,async(e,t)=>{try{s.d(r,{Z:()=>i});var o=s(8678),a=e([o]);o=(a.then?(await a)():a)[0],console.log("Database URL:","postgresql://postgres:password@localhost:5432/sqli_lab");let n=new o.Pool({host:"db",port:5432,database:"sqli_lab",user:"postgres",password:"password",ssl:!1,max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3});n.on("connect",()=>{console.log("Connected to PostgreSQL database")}),n.on("error",e=>{console.error("Unexpected error on idle client",e)});let i=n;t()}catch(e){t(e)}})}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[276,972],()=>s(6566));module.exports=t})();