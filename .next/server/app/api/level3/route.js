"use strict";(()=>{var e={};e.id=806,e.ids=[806],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8678:e=>{e.exports=import("pg")},4331:(e,s,t)=>{t.a(e,async(e,r)=>{try{t.r(s),t.d(s,{originalPathname:()=>h,patchFetch:()=>i,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>p});var a=t(9303),o=t(8716),n=t(670),c=t(2426),u=e([c]);c=(u.then?(await u)():u)[0];let l=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/level3/route",pathname:"/api/level3",filename:"route",bundlePath:"app/api/level3/route"},resolvedPagePath:"c:\\Users\\YASSER\\Documents\\GitHub\\Lab-Security\\src\\app\\api\\level3\\route.ts",nextConfigOutput:"",userland:c}),{requestAsyncStorage:d,staticGenerationAsyncStorage:p,serverHooks:m}=l,h="/api/level3/route";function i(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:p})}r()}catch(e){r(e)}})},2426:(e,s,t)=>{t.a(e,async(e,r)=>{try{t.r(s),t.d(s,{POST:()=>c});var a=t(7070),o=t(5748),n=e([o]);async function c(e){try{let{username:s,password:t}=await e.json();if(!s||!t)return a.NextResponse.json({success:!1,error:"Username and password are required"},{status:400});let r=`SELECT id, username, email, role, created_at FROM users WHERE username = '${s}' AND password = '${t}'`;console.log("Executing query:",r);try{await o.Z.query("SELECT 1"),console.log("Database connection test successful");let e=await o.Z.query(r);if(console.log("Query result:",e.rows),!(e.rows.length>0))return a.NextResponse.json({success:!1,message:"No direct match found, but UNION attacks might still work.",data:{query:r,hint:"The original query has 5 columns. Try: ' UNION SELECT username, password, email, role, id FROM users--",column_count:5,suggested_payloads:["' UNION SELECT 1,2,3,4,5--","' UNION SELECT username, password, email, role, id FROM users--","' UNION SELECT table_name, column_name, data_type, 1, 2 FROM information_schema.columns--"]}});{let s=e.rows;return a.NextResponse.json({success:!0,message:"UNION injection successful! You have extracted data from the database.",data:{extracted_data:s,query:r,vulnerability:"Union-based SQL Injection",impact:"Complete data extraction from any table in the database",columns_revealed:["id","username","email","role","created_at"],next_steps:["Try extracting from other tables","Get database schema information","Extract password hashes","Enumerate database users and permissions"]}})}}catch(e){return console.error("Database error:",e),a.NextResponse.json({success:!1,error:"Database error occurred",message:e.message,data:{query:r,hint:"SQL syntax error. Check column count and data types for UNION compatibility.",troubleshooting:["Use ORDER BY to determine column count","Ensure UNION SELECT has exactly 5 columns","Match data types (use numbers or strings as needed)"]}},{status:500})}}catch(e){return console.error("Server error:",e),a.NextResponse.json({success:!1,error:"Server error occurred",message:e.message},{status:500})}}o=(n.then?(await n)():n)[0],r()}catch(e){r(e)}})},5748:(e,s,t)=>{t.a(e,async(e,r)=>{try{t.d(s,{Z:()=>c});var a=t(8678),o=e([a]);a=(o.then?(await o)():o)[0],console.log("Database URL:","postgresql://postgres:password@localhost:5432/sqli_lab");let n=new a.Pool({host:"db",port:5432,database:"sqli_lab",user:"postgres",password:"password",ssl:!1,max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3});n.on("connect",()=>{console.log("Connected to PostgreSQL database")}),n.on("error",e=>{console.error("Unexpected error on idle client",e)});let c=n;r()}catch(e){r(e)}})}};var s=require("../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[276,972],()=>t(4331));module.exports=r})();