(()=>{var e={};e.id=902,e.ids=[902],e.modules={2934:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3803:(e,s,t)=>{"use strict";t.r(s),t.d(s,{GlobalError:()=>i.a,__next_app__:()=>m,originalPathname:()=>d,pages:()=>u,routeModule:()=>h,tree:()=>c}),t(6874),t(2029),t(5866);var r=t(3191),a=t(8716),n=t(7922),i=t.n(n),l=t(5231),o={};for(let e in l)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(e)&&(o[e]=()=>l[e]);t.d(s,o);let c=["",{children:["level1",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(t.bind(t,6874)),"c:\\Users\\YASSER\\Documents\\GitHub\\Lab-Security\\src\\app\\level1\\page.tsx"]}]},{}]},{layout:[()=>Promise.resolve().then(t.bind(t,2029)),"c:\\Users\\YASSER\\Documents\\GitHub\\Lab-Security\\src\\app\\layout.tsx"],"not-found":[()=>Promise.resolve().then(t.t.bind(t,5866,23)),"next/dist/client/components/not-found-error"]}],u=["c:\\Users\\YASSER\\Documents\\GitHub\\Lab-Security\\src\\app\\level1\\page.tsx"],d="/level1/page",m={require:t,loadChunk:()=>Promise.resolve()},h=new r.AppPageRouteModule({definition:{kind:a.x.APP_PAGE,page:"/level1/page",pathname:"/level1",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:c}})},521:(e,s,t)=>{Promise.resolve().then(t.bind(t,7140))},7140:(e,s,t)=>{"use strict";t.r(s),t.d(s,{default:()=>n});var r=t(326),a=t(8530);function n(){let e=async e=>{try{let s=await fetch("/api/level1",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return await s.json()}catch(e){return{success:!1,error:"Failed to connect to server"}}};return r.jsx("div",{className:"min-h-screen bg-gradient-to-br from-cyber-dark via-gray-900 to-cyber-dark py-12",children:(0,r.jsxs)("div",{className:"container mx-auto px-6",children:[r.jsx(a.Z,{level:1,title:"Basic String Injection",description:"This level demonstrates the most fundamental type of SQL injection vulnerability. The application concatenates user input directly into SQL queries without any sanitization or parameterization.",onSubmit:e,hints:["This level uses basic string concatenation for SQL queries","Try using single quotes (') to break out of the string context","The classic payload ' OR '1'='1' -- should work here","Look for SQL error messages that might reveal database structure","The comment sequence -- will comment out the rest of the query"],isVulnerable:!0}),r.jsx("div",{className:"mt-12 max-w-4xl mx-auto",children:(0,r.jsxs)("div",{className:"vulnerability-card rounded-lg p-8",children:[r.jsx("h2",{className:"text-2xl font-semibold mb-6 text-cyber-blue",children:"\uD83D\uDD0D Technical Details"}),(0,r.jsxs)("div",{className:"space-y-6",children:[(0,r.jsxs)("div",{children:[r.jsx("h3",{className:"text-lg font-semibold text-cyber-green mb-3",children:"Vulnerable Code Example:"}),r.jsx("div",{className:"code-block",children:`// Vulnerable SQL query construction
const query = "SELECT * FROM users WHERE username = '" + username + "' AND password = '" + password + "'";

// When user inputs: admin' OR '1'='1' --
// The query becomes:
// SELECT * FROM users WHERE username = 'admin' OR '1'='1' --' AND password = 'anything'`})]}),(0,r.jsxs)("div",{children:[r.jsx("h3",{className:"text-lg font-semibold text-cyber-green mb-3",children:"Why This Works:"}),(0,r.jsxs)("ul",{className:"space-y-2 text-gray-300",children:[(0,r.jsxs)("li",{className:"flex items-start",children:[r.jsx("span",{className:"text-cyber-blue mr-2",children:"•"}),"The single quote breaks out of the string context"]}),(0,r.jsxs)("li",{className:"flex items-start",children:[r.jsx("span",{className:"text-cyber-blue mr-2",children:"•"}),"OR '1'='1' creates a condition that's always true"]}),(0,r.jsxs)("li",{className:"flex items-start",children:[r.jsx("span",{className:"text-cyber-blue mr-2",children:"•"}),"The -- comments out the rest of the query, ignoring the password check"]}),(0,r.jsxs)("li",{className:"flex items-start",children:[r.jsx("span",{className:"text-cyber-blue mr-2",children:"•"}),"This bypasses authentication entirely"]})]})]}),(0,r.jsxs)("div",{children:[r.jsx("h3",{className:"text-lg font-semibold text-cyber-green mb-3",children:"Prevention Methods:"}),r.jsx("div",{className:"code-block",children:`// Use parameterized queries instead
const query = "SELECT * FROM users WHERE username = $1 AND password = $2";
const result = await pool.query(query, [username, hashedPassword]);

// Or use an ORM with built-in protection
const user = await User.findOne({
  where: {
    username: username,
    password: hashedPassword
  }
});`})]})]})]})})]})})}},6874:(e,s,t)=>{"use strict";t.r(s),t.d(s,{default:()=>r});let r=(0,t(8570).createProxy)(String.raw`c:\Users\YASSER\Documents\GitHub\Lab-Security\src\app\level1\page.tsx#default`)}};var s=require("../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[276,471,802],()=>t(3803));module.exports=r})();